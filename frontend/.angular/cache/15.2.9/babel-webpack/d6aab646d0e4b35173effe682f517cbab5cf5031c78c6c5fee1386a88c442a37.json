{"ast":null,"code":"import { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class PersonService {\n  constructor(http) {\n    this.http = http;\n  }\n  getAll() {\n    return this.http.get(environment.api + 'persons');\n  }\n}\nPersonService.ɵfac = function PersonService_Factory(t) {\n  return new (t || PersonService)(i0.ɵɵinject(i1.HttpClient));\n};\nPersonService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: PersonService,\n  factory: PersonService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAGA,SAASA,WAAW,QAAQ,8BAA8B;;;AAW1D,OAAM,MAAOC,aAAa;EAExBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;EAAgB;EAEjCC,MAAM;IACX,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAWL,WAAW,CAACM,GAAG,GAAG,SAAS,CAAC;EAC7D;;AANWL,aAAa;mBAAbA,aAAa;AAAA;AAAbA,aAAa;SAAbA,aAAa;EAAAM,SAAbN,aAAa;EAAAO,YAFZ;AAAM","names":["environment","PersonService","constructor","http","getAll","get","api","factory","providedIn"],"sourceRoot":"","sources":["/home/magnuskkarlsson/workspace-spring-tool-suite-4-4.17.2.RELEASE/spring-boot3-angular15/frontend/src/app/person/person.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\n\nexport interface Person {\n  id: number | null, // null for new objects\n  firstName: string,\n  lastName: string\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PersonService {\n\n  constructor(private http: HttpClient) { }\n\n  public getAll(): Observable<Person[]> {\n    return this.http.get<Person[]>(environment.api + 'persons')\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}